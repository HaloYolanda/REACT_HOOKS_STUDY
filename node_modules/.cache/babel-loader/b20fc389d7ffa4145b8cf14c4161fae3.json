{"ast":null,"code":"import _slicedToArray from \"/Users/apple/Desktop/React_Study/REACT_HOOKS_STUDY/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/apple/Desktop/React_Study/REACT_HOOKS_STUDY/src/demos/components/FuncComp.js\";\nimport React, { useState, useEffect } from 'react';\nexport default function FuncComp() {\n  var _useState = useState(0),\n      _useState2 = _slicedToArray(_useState, 2),\n      count = _useState2[0],\n      setCount = _useState2[1];\n\n  var _useState3 = useState(true),\n      _useState4 = _slicedToArray(_useState3, 2),\n      disable = _useState4[0],\n      setDisable = _useState4[1];\n\n  useEffect(function () {\n    if (count % 2 === 0) {\n      console.log(\"fc:\".concat(count));\n    }\n\n    return function () {\n      console.log('unbind', count);\n    };\n  }, [count]); // 加上[]代表指定状态发生变化能够引起副作用的依赖，不加则表示不发生副作用\n\n  useEffect(function () {\n    console.log('fn组件挂载');\n\n    var handleClick = function handleClick() {\n      return console.log('xx');\n    };\n\n    document.addEventListener('click', handleClick);\n    return function () {\n      // 卸载\n      console.log('fn组件卸载');\n      document.removeEventListener('click', handleClick);\n    };\n  }, []);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: function onClick() {\n      setDisable(!disable);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }\n  }, disable ? '禁用' : '启用'), /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }\n  }, \"hello function component \", count, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: function onClick() {\n      return setCount(count + 1);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 43\n    }\n  }, \"click me\")));\n}","map":{"version":3,"sources":["/Users/apple/Desktop/React_Study/REACT_HOOKS_STUDY/src/demos/components/FuncComp.js"],"names":["React","useState","useEffect","FuncComp","count","setCount","disable","setDisable","console","log","handleClick","document","addEventListener","removeEventListener"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AAEA,eAAe,SAASC,QAAT,GAAqB;AAAA,kBACRF,QAAQ,CAAC,CAAD,CADA;AAAA;AAAA,MAC3BG,KAD2B;AAAA,MACpBC,QADoB;;AAAA,mBAEJJ,QAAQ,CAAC,IAAD,CAFJ;AAAA;AAAA,MAE3BK,OAF2B;AAAA,MAElBC,UAFkB;;AAGlCL,EAAAA,SAAS,CAAC,YAAM;AACd,QAAIE,KAAK,GAAG,CAAR,KAAc,CAAlB,EAAqB;AACnBI,MAAAA,OAAO,CAACC,GAAR,cAAkBL,KAAlB;AACD;;AACD,WAAO,YAAM;AACXI,MAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsBL,KAAtB;AACD,KAFD;AAGD,GAPQ,EAON,CAACA,KAAD,CAPM,CAAT,CAHkC,CAUtB;;AAEZF,EAAAA,SAAS,CAAC,YAAM;AACdM,IAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ;;AACA,QAAMC,WAAW,GAAG,SAAdA,WAAc;AAAA,aAAMF,OAAO,CAACC,GAAR,CAAY,IAAZ,CAAN;AAAA,KAApB;;AACAE,IAAAA,QAAQ,CAACC,gBAAT,CAA0B,OAA1B,EAAmCF,WAAnC;AACA,WAAO,YAAM;AACX;AACAF,MAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ;AACAE,MAAAA,QAAQ,CAACE,mBAAT,CAA6B,OAA7B,EAAsCH,WAAtC;AACD,KAJD;AAKD,GATQ,EASN,EATM,CAAT;AAUA,sBACE,uDACE;AAAQ,IAAA,OAAO,EAAE,mBAAM;AAAEH,MAAAA,UAAU,CAAC,CAACD,OAAF,CAAV;AAAsB,KAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAkDA,OAAO,GAAG,IAAH,GAAU,IAAnE,CADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kCAA8BF,KAA9B,eAAoC;AAAQ,IAAA,OAAO,EAAE;AAAA,aAAMC,QAAQ,CAACD,KAAK,GAAG,CAAT,CAAd;AAAA,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAApC,CAFF,CADF;AAMD","sourcesContent":["import React, { useState, useEffect } from 'react'\n\nexport default function FuncComp () {\n  const [count, setCount] = useState(0)\n  const [disable, setDisable] = useState(true)\n  useEffect(() => {\n    if (count % 2 === 0) {\n      console.log(`fc:${count}`)\n    }\n    return () => {\n      console.log('unbind', count)\n    }\n  }, [count]) // 加上[]代表指定状态发生变化能够引起副作用的依赖，不加则表示不发生副作用\n\n  useEffect(() => {\n    console.log('fn组件挂载')\n    const handleClick = () => console.log('xx')\n    document.addEventListener('click', handleClick)\n    return () => {\n      // 卸载\n      console.log('fn组件卸载')\n      document.removeEventListener('click', handleClick)\n    }\n  }, [])\n  return (\n    <>\n      <button onClick={() => { setDisable(!disable) }}>{disable ? '禁用' : '启用'}</button>\n      <h3>hello function component {count}<button onClick={() => setCount(count + 1)}>click me</button></h3>\n    </>\n  )\n}"]},"metadata":{},"sourceType":"module"}